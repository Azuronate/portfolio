---
interface Props {
	title: string;
	description: string;
	image: string;
}

const slideRight = {
  old: {
    name: 'slideOutToLeft',
    duration: '0.7s',
    easing: 'linear',
    fillMode: 'backwards',
  },
  new: {
    name: 'slideInFromRight',
    duration: '0.7s',
    easing: 'linear',
    fillMode: 'forwards',
  }
};

const slideLeft = {
  old: {
    name: 'slideOutToRight',
    duration: '0.7s',
    easing: 'linear',
    fillMode: 'backwards',
  },
  new: {
    name: 'slideInFromLeft',
    duration: '0.7s',
    easing: 'linear',
    fillMode: 'forwards',
  }
};

const slide = {
  forwards: slideRight,
  backwards: slideLeft,
};

const fading = {
  old: {
    name: 'fadeOut',
    duration: '0.4s',
    easing: 'linear',
  },
  new: {
    name: 'fadeIn',
    duration: '0.4s',
    easing: 'linear',
  }
};

const fade = {
  forwards: fading,
  backwards: fading,
};

import { ViewTransitions } from 'astro:transitions';
const pathname = Astro.url.pathname.replace(/\/$/, "");
let animation = pathname == `/test` ? fade : slide;
import '@src/config.css';
import SpeedInsights from '@vercel/speed-insights/astro';
import Footer from '@components/Footer.astro';
import Nav from '@components/Nav.astro';

const { title, description, image } = Astro.props;
const cover = `${Astro.site}covers/${image}`;
const url = 'ncp.dev';
const handle = '@KingPr0o7';
---

<!doctype html>
<html lang="en">
	<head>
		<!-- Incipients -->
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1" />
		<title>{title}</title>
		<meta name="description" content={description} />
		<meta name="robots" content="index,follow">

		<!-- Favicons -->
		<link rel="apple-touch-icon" sizes="180x180" href="/favicons/apple-touch-icon.png">
		<link rel="icon" type="image/png" sizes="32x32" href="/favicons/favicon-32x32.png">
		<link rel="icon" type="image/png" sizes="16x16" href="/favicons/favicon-16x16.png">
		<link rel="shortcut icon" href="/favicons/favicon.ico">

		<!-- Twitter -->
		<meta name="twitter:card" content="summary_large_image">
		<meta name="twitter:image" content={cover}/>
		<meta property="twitter:title" content={title}>
		<meta property="twitter:description" content={description}>
		<meta name="twitter:creator" content={handle}>
		<meta name="twitter:site" content={handle}>
		<meta name="twitter:dnt" content="on">

		<!-- Open Graph -->
		<meta property="og:title" content={title}>
		<meta property="og:description" content={description}>
		<meta property="og:image" content={cover}>
		<meta property="og:locale" content="en_GB">
		<meta property="og:type" content="website">
		<meta property="og:url" content={url}>
		<meta property="og:site_name" content="Nathan Parker">

		<!-- Other -->
		<meta name="apple-mobile-web-app-capable" content="yes">
		<meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">
		<meta name="theme-color" content="#10100f">
		<link rel="mask-icon" href="/favicons/safari-pinned-tab.svg" color="#084c9a">

		<!-- Font -->
		<link rel="preconnect" href="https://fonts.googleapis.com">
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
		<link href="https://fonts.googleapis.com/css2?family=Rubik:wght@400;600&display=swap" rel="stylesheet">

		<!-- Astro -->
		<meta name="generator" content={Astro.generator} />
		<ViewTransitions fallback="swap" />

		<script is:inline>
			function speedInsightsBeforeSend(data) {
			  console.log("Speed Insights before send", data)
			  return data;
			}
		</script>
	  
		<SpeedInsights />
	</head>
	<body>
		<Nav />
		<main transition:animate={animation}>
			<section>
				<slot />
			</section>
		</main>
		<Footer />
	</body>
</html>

<script define:vars={{slideRight, slideLeft}}> 
	const pageOrder = ['/', '/about', '/projects', '/blogs', '/contact'];

	document.addEventListener('astro:before-preparation', (e) => {
		let currentPageIndex = pageOrder.indexOf(e.to.pathname);
		let previousPageIndex = pageOrder.indexOf(e.from.pathname);

		currentPageIndex < previousPageIndex ? e.direction = 'back' : e.direction = 'forward';
	});
</script>

<style>
main {
	display: grid;
	grid-template-columns: /* Credit to: Kevin Powell (Credits Page) */
		[full-start] minmax(25px, 1fr) [content-start] minmax(0, var(--max-width)) [content-end] minmax(25px, 1fr) [full-end];
	padding-top: 70px;
	min-height: 100vh;
	width: 100%;
	place-content: center;
}

	main > * { grid-column: content; }

	main[data-state="padded"] { padding-top: 95px; }

	section { max-width: var(--max-width); }

@media (max-width: 1000px) {
	/* Removes top padding due to navbar moving to bottom of vh */
	main, main[data-state="padded"] { padding-top: 0px;}
}

@keyframes slideInFromRight {
    0% {
        transform: translateX(100%);
        opacity: 0;
    }
    100% {
        transform: translateX(0);
        opacity: 1;
    }
}

@keyframes slideOutToLeft {
    0% {
        transform: translateX(0);
        opacity: 1;
    }
    100% {
        transform: translateX(-100%);
        opacity: 0;
    }
}

@keyframes slideInFromLeft {
    0% {
        transform: translateX(-100%);
        opacity: 0;
    }
    100% {
        transform: translateX(0);
        opacity: 1;
    }
}

@keyframes slideOutToRight {
    0% {
        transform: translateX(0);
        opacity: 1;
    }
    100% {
        transform: translateX(100%);
        opacity: 0;
    }
}

@keyframes fadeIn {
	0% {
		opacity: 0;
	}
	100% {
		opacity: 1;
	}
}

@keyframes fadeOut {
	0% {
		opacity: 1;
	}
	100% {
		opacity: 0;
	}
}
</style>