---
import { Icon } from 'astro-icon/components'
import Button from "./Button.astro";
---

<nav class="navbar" data-navlist="semi" transition:persist="navbar">
	<div class="navbar-container">
		<div class="navbar-left">
			<a href="/" aria-label="Home Page">
				<Icon name="logos/n" width={48} height={48} />
			</a>
		</div>
		<div class="navbar-middle">
			<a class="navbar-link" id="back-link" href="/blogs">
				<Icon name="symbols/arrow-left" class="navbar-image" width={32} height={32} />
				<p class="navbar-link-text">Back</p>
			</a>
			<a class="navbar-link" id="home-link" href="./">
				<Icon name="logos/n" class="navbar-image" width={32} height={32} />
				<p class="navbar-link-text">Home</p>
			</a>
			<a class="navbar-link" id="about-link" href="/about">
				<Icon name="symbols/about" class="navbar-image" width={32} height={32} />
				<p class="navbar-link-text">About</p>
			</a>
			<a class="navbar-link" id="projects-link" href="/projects">
				<Icon name="symbols/project" class="navbar-image" width={32} height={32} />
				<p class="navbar-link-text">Projects</p>
			</a>
			<a class="navbar-link" id="blogs-link" href="/blogs">
				<p class="navbar-link-text">Blogs</p>
			</a>

			<div class="navbar-link" id="mobile-hamburger-parent" tabindex="0">
				<span class="mobile-hamburger" data-state="closed">
					<span class="bar"></span>
					<span class="bar"></span>
					<span class="bar"></span>
				</span>
				<p class="navbar-link-text">More</p>
			</div>
		</div>
		<div class="navbar-right">
			<Button link="/contact" id="contact-link" text="Contact" size={20} />
		</div> 
	</div>
</nav>

<nav class="mobile-navlist" transition:persist="navlist">
	<a class="navbar-link" href="/contact">
		<Icon name="symbols/contact" class="navbar-image" width={32} height={32} />
		<p class="navbar-link-text">Contact</p>
	</a>

	<a class="navbar-link" href="/blogs">
		<Icon name="symbols/blog" class="navbar-image" width={32} height={32} />
		<p class="navbar-link-text">Blogs</p>
	</a>	

	<a class="navbar-link" href="/projects">
		<Icon name="symbols/project" class="navbar-image" width={32} height={32} />
		<p class="navbar-link-text">Projects</p>
	</a>
</nav>
<style>
.navbar {
	position: fixed;
	top: 0;
	z-index: 10;
	display: flex;
	justify-content: center;
	align-items: center;
	width: 100%;
	height: 70px;
	background-color: var(--background);
}

	.navbar-container {
		position: relative;
		display: flex;
		align-items: center;	
		justify-content: space-between;	
		width: var(--max-width);
		height: 100%;
		padding: 0 50px;
		max-width: var(--max-width);
		overflow: hidden;
	}

		.navbar-middle {
			position: relative;
			display: flex;
			justify-content: space-between;
			align-items: center;
			list-style-type: none;
			font-size: clamp(1.2rem, 2vw, 1.5rem);
			height: 100%;
			width: fit-content;
			overflow: visible;
			padding-left: 48px;
		}

			.navbar-link { 
				position: relative;
				padding: 0 40px;
				display: flex;
				align-items: center;				
				text-decoration: none; 
				height: 100%;
				cursor: pointer;
			}

				/* Toggle Selector Color */
				.navbar-link[data-toggled="true"] > .navbar-link-text { color: var(--accent); }
				.navbar-link[data-toggled="true"] > .navbar-image { color: var(--accent); }

				/* Link Ensurement */
				#home-link { display: none; }
				#mobile-hamburger-parent { display: none; }
				body:not([data-pathname="blog"]) #back-link { display: none; }
				body[data-pathname="blog"] #back-link { order: 4; }
				body[data-pathname="blog"] #blogs-link { display: none; }

				/* Hover/Focus Colorization */
				.navbar-link:not(#mobile-hamburger-parent):not([data-toggled="true"]):hover > *,
				.navbar-link:not(#mobile-hamburger-parent):not([data-toggled="true"]):focus > *  {
					color: var(--primary);
				}
				
					.navbar-link-text { font-size: clamp(1rem, 2vw, 1.5rem); width: fit-content; }

					.navbar-image {
						width: 32px;
						height: 32px;
						color: var(--text);
					}

				/* Navbar link selector - Credit to: Kevin Powell (Credits Page) */
				.navbar-middle::after {
					position: absolute;
					content: "";
					bottom: 0;
					left: 0;
					right: 0;
					height: 1px;
					scale: var(--_width, 0) 1;
					translate: var(--_left, 0px) 0;
					transform-origin: left;
					background: var(--accent);
					transition: scale 450ms, translate 450ms; /* Control the speed of the underline */
					transition-delay: 100ms;
				}

			.mobile-hamburger {
				display: none;
				padding-top: 2px;
				height: 32px;
				width: 32px;
				flex-direction: column;
				justify-content: space-between;
				animation: appear 2.2s ease;		
				gap: 12px;		
			}
				
				.bar {
					width: 100%;
					height: 2px;
					border-radius: var(--main-border-radius);
					background-color: white;
					transition: all 0.9s;					
				}
				
					/* Hamburger Menu Animation */
					.mobile-hamburger[data-state="open"] > .bar:nth-child(1) {
						transform: rotate(-45deg) translate(-10px, 10px);
						transition: all 0.9s;
					}
				
					.mobile-hamburger[data-state="open"] > .bar:nth-child(2) {
						transform: rotate(45deg);
						transition: all 0.9s;
					}
				
					.mobile-hamburger[data-state="open"] > .bar:nth-child(3) {
						opacity: 0;
						transition: opacity 0.9s;
					}
				
						.mobile-hamburger[data-state="open"], .mobile-hamburger[data-state="closed"] .bar:nth-child(3) {
							opacity: 1;
							transition: opacity 0.9s;
						}

		/* Navbar Line for Other Tasks (e.g. Loading Animations or Blog Progress Bar) */
		.navbar-container::after {
			position: absolute;
			content: "";
			bottom: 0;
			left: 0;
			right: 0;
			height: 1px;
			transform: scaleX(var(--_width, 0)) translateX(var(--_left, 0px));
			transform-origin: var(--_transform-origin, left);
			background: var(--accent);
		}

			.navbar-container.error::after { 
				transform-origin: center;
				animation: error-expand 1.5s ease-in forwards; 
				background: var(--error);
			}

			/* Navbar Loading Animations */
			.navbar-container.loading-forward::after { animation: load-forward 2.5s linear infinite; }
			.navbar-container.loading-backward::after { animation: load-backward 2.5s linear infinite; }

			@keyframes load-forward {
				0% { transform: scaleX(0.15) translateX(-100%); }
				100% { transform: scaleX(0.15) translateX(1100%); }
			}

			@keyframes load-backward {
				0% { transform: scaleX(0.15) translateX(1100%); }
				100% { transform: scaleX(0.15) translateX(-100%); }	
			}

			@keyframes error-expand {
    			0% { transform: scaleX(0); }
    			100% { transform: scaleX(1); }
			}

  	/* Navbar Line Background (Gray Color) */
	nav::after {
		background: radial-gradient(50% 100% at 50% 100%, var(--gray) 0%, var(--background) 100%); /* Change from transparent to var(--background) to change loading indicator disappearing behavior*/
		bottom: 0;
		content: "";
		height: 2px;
		position: absolute;
		width: 100%;
		max-width: var(--max-width);    
		transition: height 250ms ease;
	}

		/* Hides navbar line when navlist is open */
		.navbar[data-navlist="true"]::after { height: 0px; }

.mobile-navlist { 
	padding-bottom: 70px;
	position: fixed;
	z-index: 9;
	width: 100%;
	height: 300px;
	top: 1000vh;
	background-color: var(--background);
	transition: top 1s ease;
}

	/* Animates the navlist downwards instead of just disappearing */
	nav[data-navlist="false"] ~ .mobile-navlist { top: calc(200dvh - 300px); }
	.mobile-navlist > .navbar-link:last-child { display: none; }

@media (min-width: 1000px) {
	.navbar-image { display: none; }
}

@media (max-width: 1000px) {
	/* Navbar */
	.navbar { 
		top: calc(100dvh - 70px);  /* Moves navbar to bottom of dvh (Dynamic Viewport Height - Safari Toolbar) */
		position: fixed;
	}

		.navbar::after { top: 0; }

		.navbar-container {
			padding: 0;
			width: 100%;
		}

			nav::after {
				background: radial-gradient(50% 100% at 50% 100%, var(--gray) 0%, var(--gray) 100%) !important;
			}

			.navbar-container::after { top: 0; }
			.navbar-left { display: none; }

			.navbar-middle {
				justify-content: space-around;
				width: 100%;
				padding-left: 0;
				gap: 0;
			}

				/* Switching to image based navbar-links */
				.navbar-link {
					flex-direction: column;
					justify-content: center;
					gap: 5px;
				}

				/* Navbar Link Ensurance */
				body[data-pathname="blog"] #back-link { display: flex; order: 0; } /* Displays Back Link */
				body:not([data-pathname="blog"]) #home-link { display: flex; } /* Displays Home Link */
				#contact-link { display: none; } /* Hides Contact Button Link */
				#blogs-link { display: none; } /* Hides Blogs Link */
				#mobile-hamburger-parent { display: flex; } /* Displays Hamburger Menu */

					.navbar-image {
						width: 24px;
						height: 24px;
					}

				.navbar-middle::after { top: 1px; } /* Moves navbar line to top due to navbar being on the bottom */

				.mobile-hamburger {
					display: flex;
					opacity: 1;
					width: 24px;
					height: 24px;
					gap: 8px;
				}
		
					.mobile-hamburger[data-state="open"] > .bar:nth-child(1) {
						transform: rotate(-45deg) translate(-7px, 7px);
						transition: all 0.9s;
					}

			.navbar-right { display: none; }		

	/* Enables + Animates the navlist */
	.navbar[data-navlist="true"] ~ .mobile-navlist {
		display: flex;
		align-items: flex-start;
		justify-content: flex-end;
		flex-direction: column;
		top: calc(100dvh - 300px);
		animation: navlist-appear 0.4s ease;
	}

		/* Readjusts navbar line to be at the top of the navlist */
		.mobile-navlist::before {
			position: absolute;
			content: "";
			top: 0;
			left: 0;
			right: 0;
			height: 1px;
			background: radial-gradient(50% 100% at 50% 100%,rgba(255,255,255,.12) 0%,rgba(255,255,255,0) 100%);
		}
	
		.mobile-navlist > .navbar-link {
			display: flex;
			justify-content: flex-end;
			flex-direction: row;
			width: 100%;
		}

}

@media (max-width: 500px) {
	.navbar-container { padding: 0; }
	.navbar-link { padding: 0 25px; }
}

@media (max-width: 380px) {
	#projects-link {display: none;} /* Hides Projects Link */
	.mobile-navlist > .navbar-link:last-child { display: flex; }
}

@keyframes navlist-appear {
	from { top: calc(200dvh - 300px);}
	to { top: calc(100dvh - 300px);}
}	
</style>
<script>
	import { loading } from 'astro-vtbot/components/loading-indicator';

	// Element Gathering
	const navbar: HTMLElement = document.querySelector(".navbar")!;
	const navbar_container: HTMLElement = document.querySelector(".navbar-container")!;
	const hamburger_parent: HTMLElement = document.getElementById('mobile-hamburger-parent')!;
	const hamburger: HTMLElement = document.querySelector('.mobile-hamburger')!;
	const navbar_middle: HTMLElement = document.querySelector(".navbar-middle")!;

	// Numerical Constants
	const navbar_middle_left: number = -475;
	const navbar_middle_right: number = 1000;
	const navbar_middle_width: number = 0;

	// Loading Variables
	var loading_trigger_threshold = null;
	var animation_set_direction = '';

	//
	// Navbar Functionality
	//   Various functions handling tabs, navlist, 
	//   dynamic navbar underline, and loading animations.
	//

	// Dynamically sets middle navbar underline
	function set_navbar_middle(left: number, width: number) {
		navbar_middle.style.setProperty("--_left", left + "px");
		navbar_middle.style.setProperty("--_width", width.toString());
	}

	// Activate currently selected tab
	function switch_tab(event: { target: HTMLElement }) {
		let newTab = event.target;
		newTab.tagName != "A" ? newTab = newTab.parentElement : null;
		document.querySelectorAll(".navbar-link").forEach((tab) => tab.removeAttribute("data-toggled"));

		if (newTab.id === "mobile-hamburger-parent") {
			newTab.removeAttribute("data-toggled");
		} else {
			newTab.setAttribute("data-toggled", "true");

			if (newTab.parentElement.className !== "mobile-navlist") {
				let newTabWidth = newTab.offsetWidth / navbar_middle.offsetWidth;
				set_navbar_middle(newTab.offsetLeft, newTabWidth);
			} else {
				set_navbar_middle(navbar_middle_right, navbar_middle_width);
			}
		}
	}

	// Return visible tabs
	function get_tab(href: string) {
		let elements = document.querySelectorAll(`.navbar-link[href='${href}']`);

		// Only get visible elements
		let visible_tabs = Array.from(elements).filter(element => {
			let style = window.getComputedStyle(element);
			return style.display !== "none";
		});

		return visible_tabs[0] as HTMLElement;
	} 

	// Handle navbar state with navlist
	function change_nav(state: string) {
		let is_open = state === "true";
		
		hamburger.setAttribute('data-state', is_open ? "open" : "closed");
		navbar.setAttribute('data-navlist', is_open ? "true" : "false");
	}

	// Progress bar for blog pages
	function scroll_progress() {
		navbar_container.style.setProperty('--_transform-origin', 'center');

		const winScroll = document.body.scrollTop || document.documentElement.scrollTop;
		const height = document.documentElement.scrollHeight - document.documentElement.clientHeight - document.querySelector("footer").clientHeight;
		const scrolled = (winScroll / height) * 100;
		
		navbar_container.style.setProperty("--_left", "0%");
		navbar_container.style.setProperty("--_width", scrolled + "%");
	}

	// A loading animation displayed when a page isn't being loaded
	function show() {
		loading_trigger_threshold = setTimeout(() => {
			navbar_container.style.setProperty('--_transform-origin', 'left');
			let direction = sessionStorage.getItem('direction');
			animation_set_direction = `loading-${direction}`

			if (direction === "forward") {
				navbar_middle.style.setProperty("--_left", 200 + "%");
			} else {
				navbar_middle.style.setProperty("--_left", -100 + "%");
			}

			navbar_middle.style.setProperty("--_width", 0 + "%");

			navbar_container.classList.add(`loading-${direction}`);
		}, 1900);
	}

	// Hides said loading animation
	function hide() {
		clearTimeout(loading_trigger_threshold);
		if (animation_set_direction !== '') {
			navbar_container.classList.remove(animation_set_direction);
		}
	}

	//
	// Page Initialization
	//   Sets up various event listeners and page states
	//   to ensure cohesive navbar line behavior, tab selection,
	//   loading animations, and event listeners. 
	//

	document.addEventListener('astro:page-load', () => {
		// Maintain and update the current pathname
		let pathname = location.pathname;
		let paths = ["/about", "/projects", "/blogs"];
		!paths.includes(pathname) ? document.querySelectorAll('.navbar-link').forEach(el => el.removeAttribute('data-toggled')) : null;
		document.body.setAttribute('data-pathname', pathname.split("/")[1]);

		// Ensure navbar line is set back to default from blog progress state
		navbar_container.style.setProperty('--_transform-origin', 'left');
		set_navbar_middle(navbar_middle_left, navbar_middle_width);
		if (!document.getElementById('error-code')) {
			document.querySelector('.navbar-container').classList.remove('error');
		}

		// Remove scroll event listener if not on blog page
		document.removeEventListener('scroll', scroll_progress);

		// Via the pathname, ensure the correct tab is selected and navbar line position is set
		if (paths.includes(pathname)) {
			let toggled_tab = get_tab(pathname)
			switch_tab({ target: toggled_tab });	
		} else if (pathname === "/contact") {
			set_navbar_middle(navbar_middle_right, navbar_middle_width);
			switch_tab({ target: document.querySelector(".navbar-link[href='/contact']")});
		} else if (pathname === "/") {
			set_navbar_middle(navbar_middle_left, navbar_middle_width);
		} else if (pathname.startsWith("/blog/")) {
			document.addEventListener('scroll', scroll_progress);
		}

		//
		// Various Event Listeners 
		//

		navbar.setAttribute('data-navlist', "false");

		loading(show, hide);
		navbar_container.style.setProperty("--_left", 0 + "%");
		navbar_container.style.setProperty("--_width", 0 + "%");

		hamburger_parent.addEventListener('click', (e) => {
			e.stopImmediatePropagation();
			let state = hamburger.getAttribute('data-state');
			console.log(state);
			state === "closed" ? change_nav("true") : change_nav("false");
		});

		hamburger_parent.setAttribute('data-state', "closed");
		hamburger.setAttribute('data-state', "closed");

		// When resizing in DevTools, ensure the dynamic navbar line is set correctly
		window.addEventListener('resize', () => {
			if (document.querySelector(".navbar-link[data-toggled='true']")) {
				let toggled_tab = get_tab(location.pathname);
				switch_tab({target: toggled_tab})
			}
		});

	}, { once: false });
</script>