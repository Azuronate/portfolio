---
interface Props {
	href: string;
	video_id: string;
	video_title: string;
	start_time: number;
	project_title: string;
	project_desc: string;
	github_link: string;
}

import { Icon } from 'astro-icon/components'
import Video from '@components/Video.astro';
const { video_id, video_title, start_time, project_title, project_desc, github_link, href } = Astro.props;
---

<div class="project">
	<Video video_id={video_id} video_title={video_title} start_time={start_time} />
	<div class="project-info">
		<h2 class="project-name">{project_title}</h2>
		<p class="project-desc">{project_desc}</p>
		<div id="project-redirects">
			<a class="project-redirect" href={github_link} target="_blank">
				<Icon name="logos/github-fitted" class="project-redirect-image" />
				<p class="project-redirect-text">View Code</p>
			</a>
			<a class="project-redirect" href=`/503`>
				<Icon name="symbols/story" class="project-redirect-image" />
				<p class="project-redirect-text">View Study</p>
			</a>
		</div>					
	</div>
</div>

<style>
.project {
	display: flex;
	align-items: center;
	gap: 25px;
	max-width: fit-content;
}

	.project:nth-child(even) { flex-direction: row-reverse; }

	#project-redirects {
		border-radius: var(--secondary-border-radius);
		height: fit-content;
		display: flex;
		align-items: center;
		justify-content: center;
		gap: 25px;
	}

		.project-redirect {
			cursor: pointer;
			display: flex;
			align-items: center;
			justify-content: center;
			gap: 12.5px;
			text-decoration: none;
		}

			.project-redirect:hover > .project-redirect-image,
			.project-redirect:focus > .project-redirect-image { 
				color: var(--accent); 
			}
				
			.project-redirect:hover > .project-redirect-text,
			.project-redirect:focus > .project-redirect-text {
				color: var(--accent);
			}

			.project-redirect-image {
				width: 48px;
				height: 48px;
			}

		.project-seperator {
			width: 3px;
			height: 50px;
			background-color: var(--gray);
			border-radius: var(--secondary-border-radius);
		}

	.project-info {
		display: flex;
		flex-direction: column;
		gap: 25px;
		max-height: 400px;
		max-width: 500px;
		/* max-width: 50%; */
	}

		.project-info > * { width: 100%; text-align: center; }

		.project-name { font-size: clamp(1.3rem, 10vw, 3rem); }

		.project-languages {
			display: flex;
			gap: 12.5px;
		}

			.project-language {
				display: flex;
				align-items: center;
				justify-content: center;
				flex-wrap: wrap;
				gap: 12.5px;
				padding: 12.5px;
				border-radius: var(--secondary-border-radius);
				background-color: var(--gray);
			}

				.project-language-logo {
					width: 32px;
					height: 32px;
					border-radius: var(--secondary-border-radius);
				}

		.project-desc {
			font-size: 1.1rem;
			line-height: 2rem;
		}

@media (max-width: 1000px) {
	.project {
		flex-direction: column !important;
		width: 100%;
		max-width: 100%;
		height: fit-content;
	}

		.project::after {
			content: "";
			width: 100%;
			height: 3px;
			background-color: var(--gray);
			border-radius: var(--secondary-border-radius);
		}

		.project-button { width: 50%; }

		.project-info {
			max-width: 95%;
			max-height: fit-content;
			align-items: center;
		}

			.project-info > * { width: 100%; text-align: left; }

			.project-redirect-image {
				width: 48px;
				height: 48px;
			}
}

@media (max-width: 500px) {
	.project-info {
		padding: 0;
	}

		.project-button { width: 100%; }	
}

@media (max-width: 400px) {
	#project-redirects { flex-direction: column; }

		.project-redirect {
			width: 100%;
			border-radius: var(--main-border-radius);
			background-color: var(--secondary) !important;			
		}

		.project-seperator { display: none; }
}
</style>